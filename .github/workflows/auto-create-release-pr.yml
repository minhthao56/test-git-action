name: Auto create release PR

on:
    pull_request:
        branches:
            - release/202**
        types:
            - closed

jobs:  
    get-commit-diff:
        runs-on: ubuntu-latest
        name: Get number commit on dev and release branch
        outputs:
            number_commit_diff: ${{ steps.count_commit.outputs.diff }}
            current_release_branch: ${{ steps.current_release_branch.outputs.branch_name }}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v2
            with:
              fetch-depth: 0
          - name: Get number commit on dev and release
            id: count_commit
            run: |
              set -e
              git checkout develop        
              git checkout -b new-branch ${{ github.event.pull_request.base.sha }}
              echo "::set-output name=diff::$(git rev-list --count develop..new-branch)"

              echo commit_diff:
              git rev-list --count develop..new-branch
          
          - name: Get current release branch
            id: current_release_branchs
            run: |
                set -e
                echo "::set-output name=branch_name::$(git branch --all --list '*origin/release/20*' | sort -r | head -n 1 | cut -c18-)"

                git branch --all --list '*origin/release/20*' | sort -r | head -n 1 | cut -c18-
                echo ${{github.base_ref}}
        
    generate-release-branch:
        runs-on: ubuntu-latest
        needs: [get-commit-diff]
        name: Release branch for this week
        if: ${{ needs.get-commit-diff.outputs.number_commit_diff == 0 && github.base_ref == needs.get-commit-diff.outputs.current_release_branch}}

        outputs:
            release-branch: ${{ steps.create-build-branch.outputs.branch }}
        steps:
            - name: Create branch
              id: create-build-branch
              run: |
                  if [[ "${{ github.event_name }}" == "workflow_dispatch" ]] 
                  then
                    echo "::set-output name=branch::${{ github.event.inputs.release-branch }}"
                  else
                    echo "::set-output name=branch::${{github.base_ref}}"
                  fi

    create-pull-request-from-release-branch:
        runs-on: ubuntu-latest
        name: Create Release PR
        needs: [generate-release-branch]
        steps:
            - name: Checkout Repo
              uses: actions/checkout@master
              with:
                  fetch-depth: 0
                  persist-credentials: false
                  ref: "${{ needs.generate-release-branch.outputs.release-branch }}"
      
            - name: Create Pull Request
              id: cpr
              uses: repo-sync/pull-request@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
              with:
                  source_branch: "${{ needs.generate-release-branch.outputs.release-branch }}"
                  destination_branch: "develop"
                  pr_title: "[${{ github.event.inputs.jira-ticket-id }}] Release PR ${{needs.generate-release-branch.outputs.release-branch}}" # Title of pull request
                  pr_body: "This PR is auto-generated for this week ${{needs.generate-release-branch.outputs.release-branch}}" # Full markdown support, requires pr_title to be set
                  pr_label: "release,automated,Ok to test" # Comma-separated list (no spaces)
                  pr_draft: true # Creates pull request as draft
                  pr_allow_empty: true # Creates pull request even if there are no changes

            
